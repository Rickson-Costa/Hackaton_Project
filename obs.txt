# ============================================================================
# REIN√çCIO COMPLETO DO AMBIENTE DOCKER
# ============================================================================

# 1. PARAR TODOS OS CONTAINERS
docker-compose down

# 2. REMOVER CONTAINERS, VOLUMES E REDES (LIMPEZA COMPLETA)
docker-compose down -v --remove-orphans

# 3. REMOVER IMAGENS (OPCIONAL - SE QUISER REBUILD COMPLETO)
docker-compose down --rmi all --volumes --remove-orphans

# 4. LIMPAR CACHE DO DOCKER (OPCIONAL - LIMPEZA PROFUNDA)
docker system prune -a --volumes

# ============================================================================
# RECONSTRUIR E SUBIR O AMBIENTE
# ============================================================================

# 5. REBUILD DAS IMAGENS (FOR√áAR RECONSTRU√á√ÉO)
docker-compose build --no-cache

# 6. SUBIR OS SERVI√áOS
docker-compose up -d

# 7. VERIFICAR STATUS
docker-compose ps

# ============================================================================
# EXECUTAR MIGRA√á√ïES NO CONTAINER
# ============================================================================

# 8. EXECUTAR MIGRA√á√ïES (NO CONTAINER)
docker-compose exec web python manage.py makemigrations
docker-compose exec web python manage.py makemigrations projetos
docker-compose exec web python manage.py makemigrations contratos
docker-compose exec web python manage.py migrate

# 9. CRIAR SUPERUSER (SE NECESS√ÅRIO)
docker-compose exec web python manage.py createsuperuser

# 10. COLETAR ARQUIVOS EST√ÅTICOS (SE NECESS√ÅRIO)
docker-compose exec web python manage.py collectstatic --noinput

# ============================================================================
# TESTAR A APLICA√á√ÉO
# ============================================================================

# 11. ACESSAR SHELL DJANGO NO CONTAINER
docker-compose exec web python manage.py shell

# Dentro do shell, execute os testes:
from apps.projetos.models import Projeto
projeto = Projeto.objects.create(
    cod_projeto=1,
    nome='Teste Docker',
    data_inicio='2022-04-18',
    data_encerramento='2023-02-01',
    valor=1000.00,
    situacao='1'
)
print(f"‚úÖ Projeto criado: {projeto}")

# 12. VER LOGS (SE HOUVER PROBLEMAS)
docker-compose logs web
docker-compose logs db

# ============================================================================
# COMANDOS R√ÅPIDOS (ESCOLHA UMA OP√á√ÉO)
# ============================================================================

# OP√á√ÉO A: REIN√çCIO R√ÅPIDO (MANT√âM VOLUMES)
docker-compose down && docker-compose up -d

# OP√á√ÉO B: REIN√çCIO COM REBUILD (MANT√âM BANCO)
docker-compose down && docker-compose build && docker-compose up -d

# OP√á√ÉO C: REIN√çCIO COMPLETO (PERDE DADOS)
docker-compose down -v && docker-compose build --no-cache && docker-compose up -d

# OP√á√ÉO D: LIMPEZA TOTAL (CUIDADO - REMOVE TUDO)
docker-compose down -v --remove-orphans --rmi all && \
docker system prune -a --volumes -f && \
docker-compose build --no-cache && \
docker-compose up -d

# ============================================================================
# TROUBLESHOOTING
# ============================================================================

# Se o banco n√£o subir:
docker-compose logs db

# Se a aplica√ß√£o n√£o conectar no banco:
docker-compose exec web ping db

# Se houver erro de permiss√£o:
sudo chown -R $USER:$USER .

# Se houver erro de porta ocupada:
sudo netstat -tulpn | grep :8000
# ou
sudo lsof -i :8000

# Matar processo na porta:
sudo kill -9 $(sudo lsof -t -i:8000)

# ============================================================================
# VERIFICA√á√ÉO FINAL
# ============================================================================

# 13. TESTAR APLICA√á√ÉO
curl http://localhost:8000

# 14. TESTAR ADMIN
curl http://localhost:8000/admin/

# 15. VERIFICAR ESTRUTURA DO BANCO
docker-compose exec db psql -U postgres -d funetec_db -c "\dt"

# Ou se usando SQLite:
docker-compose exec web python manage.py shell
# from django.db import connection
# cursor = connection.cursor()
# cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
# print(cursor.fetchall())

# ============================================================================
# DICAS IMPORTANTES
# ============================================================================

"""
‚ö†Ô∏è  CUIDADOS:
- docker-compose down -v REMOVE O BANCO DE DADOS
- Use backup antes de limpeza completa
- Verifique o docker-compose.yml antes de executar

‚úÖ RECOMENDA√á√ÉO:
- Para mudan√ßas nos models: OP√á√ÉO B (build + migrate)
- Para problemas graves: OP√á√ÉO C (completo)
- Para desenvolvimento: OP√á√ÉO A (r√°pido)

üìÅ ESTRUTURA ESPERADA:
projeto/
‚îú‚îÄ‚îÄ docker-compose.yml
‚îú‚îÄ‚îÄ Dockerfile
‚îú‚îÄ‚îÄ requirements.txt
‚îî‚îÄ‚îÄ funetec_system/
    ‚îú‚îÄ‚îÄ manage.py
    ‚îî‚îÄ‚îÄ apps/...
"""